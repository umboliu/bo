    bool binarySearch(vector<vector<int> > &matrix,int target,int start,int end,int &n){
        if(start > end) return false;
        if(start == end){
            int i = start/n;
            int j = start%n;
            if(matrix[i][j] == target)
                return true;
            else return false;
        }
        
        int mid = (start + end)/2;
        int i = mid/n;
        int j = mid%n;
        if(matrix[i][j] == target)
            return true;
        else if(matrix[i][j] > target)
            return binarySearch(matrix,target,start,mid - 1,n);
        else return binarySearch(matrix,target,mid + 1,end,n);
    }

    bool searchMatrix(vector<vector<int> > &matrix, int target) {
        if(matrix.empty()) return false;
        int n = matrix[0].size();
        int total = matrix.size() * matrix[0].size();
        int start = 0,end = total - 1;
        return binarySearch(matrix,target,start,end,n);
    }
